name: Docker Publish

on:
  push:
    branches: [main]
    tags: ['v*']

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write

jobs:
  lint_test:
    name: Go Lint, Unit & Integration Test
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'

      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Native Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libzmq3-dev

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60.2
          args: --timeout=5m

      - name: Run Unit Tests
        run: make test

      - name: Run Integration Tests
        run: make test-e2e

      - name: Run Gosec
        uses: securego/gosec@master
        with:
          args: "-exclude-generated -exclude-dir=e2etest -exclude-dir=testutil ./..."

  docker_build:
    name: Docker Build & Push to GHCR
    runs-on: ubuntu-24.04
    needs: lint_test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}

  vulnerability_scan:
    name: Trivy Vulnerability Scan
    runs-on: ubuntu-24.04
    needs: docker_build

    steps:
      - uses: actions/checkout@v4

      - name: Create Trivy Config
        run: |
          cat <<EOF > /tmp/trivy.yaml
          format: sarif
          output: trivy-results.sarif
          vulnerability:
            ignore-unfixed: true
            type:
              - os
              - library
          severity:
            - CRITICAL
            - HIGH
            - MEDIUM
          EOF

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: "ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}"
          trivy-config: /tmp/trivy.yaml
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Trivy Report
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif
