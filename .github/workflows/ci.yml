name: Continuous Integration

on:
  pull_request:
    branches:
      - '**'

permissions:
  contents: read
  security-events: write

jobs:
  go_lint_test:
    name: Go Lint & Tests
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'

      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Native Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libzmq3-dev

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60.2
          args: --timeout=5m

      - name: Run Unit Tests
        run: make test

      - name: Run Integration Tests
        run: make test-e2e

      - name: Run Gosec (Security Scan)
        uses: securego/gosec@master
        with:
          args: "-exclude-generated -exclude-dir=e2etest -exclude-dir=testutil ./..."

  docker_pipeline:
    name: Docker Build & Scan (Dry-run)
    runs-on: ubuntu-24.04
    needs: go_lint_test
    if: always()

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Dockerfile Lint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          output-file: hadolint-result.sarif
          format: sarif
          no-fail: true
          dockerfile: Dockerfile

      - name: Upload Hadolint Results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: hadolint-result.sarif

      - name: Docker Build (Dry-run)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: "ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:ci-preview"
          format: sarif
          output: trivy-results.sarif
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Trivy Results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif
